version: '2'
services:

  syslog:
    #build: syslog
    image: dchidell/syslog-web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /syslog"
    ports:
      - "514:514/udp"
      - "514:514/tcp"

  snmptrap:
    #build: snmptrap
    image: dchidell/snmptrap-web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /snmptrap"
    ports:
      - "162:162/tcp"
      - "161:161/udp"
      - "162:162/udp"

  tacacs:
    #build: tacacs
    image: dchidell/tacacs-web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /tacacs"
    ports:
      - "49:49"
      
  radius:
    #build: radius
    image: dchidell/radius-web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /radius"
    ports:
      - '1812:1812/udp'

  dns:
    #build: dnsmasq
    image: dchidell/dnsmasq-web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /dns"
    cap_add:
      - NET_ADMIN # Required for ephemeral port usage
    ports:
      - '53:53/udp'
      
  ntp:
    image: dchidell/chronyd-web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /ntp"
    cap_add:
      - SYS_TIME # Required for hardware time clock sync
    ports:
      - '123:123/udp'
      
  vpn:
    image: dchidell/vpn-web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /vpn"
    cap_add:
      - NET_ADMIN # Required for hardware tunnel interfaces & routes
    ports:
      - '443:443/tcp'
      - '443:443/udp'

  infra_traefik:
    #build: traefik
    image: dchidell/traefik-stack-balancer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - infra=true
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefixStrip: /loadbalance"
      - "traefik.frontend.priority=1"
    ports:
      - "80:80"

  infra_flask:
    #build: flask
    image: dchidell/flask-stack-manager
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - infra=true
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=HostRegexp:{catchall:.*}"
      - "traefik.frontend.priority=1"
